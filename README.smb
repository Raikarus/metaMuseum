smbclient в скрипте bash

На сервере 10.100.1.7 доступен сервис Samba с именем mhcm
В нём множество подкаталогов, среди которых dlv_dump

Samba не разбирает (к сожалению) дисковые подразделы,
смонтированные в дерево файловой системы.
Поэтому, хотя команда du и присутствует в smbclient,
пользоваться ей в нашем случае нельзя.

Учёт свободного места на подмонтированных разделах
необходимо вести самостоятельно, запросив предварительно
уже занятое файлами место и зная заранее размер каждого раздела.

================
Проверка доступности сервера (сервиса/ресурса) - посылка ping

smbclient -N //10.100.1.7/mhcm3/ -D dlv_dump/blv3 -c "echo 1 1"
echo $?

Если возвращает 0, то сервис доступен (включая заданный подкаталог)
Иначе (обычно 1) сервис (либо подкаталог на сервисе) не доступен

================
Получение пространства, занятого файлами в заданном подкаталоге

aaa=`smbclient -N //10.100.1.7/mhcm/ -D dlv_dump/blv1 -c "dir" |grep -v " D "| grep -v "blocks available" |awk 'NF>5{sum+=$(NF-5);}END{print sum;}'`

echo $aaa

В awk очень хитрый доступ к полю с размером файла, так как довольно сложно
определить номер поля от начала строки, если в имени файла 
присутствуют пробелы.
Есть надежда, что в конце строки перечень и значения полей фиксированы.

================
Копирование группы файлов на сервер без подтверждения

smbclient -N //10.100.1.7/mhcm/ -D dlv_dump/blv1 -c "prompt off;mput *.jpg"

================
Проверка наличия файла

(файл есть)
aaa=`smbclient -N //10.100.1.7/mhcm/ -D dlv_dump/blv1 -c "dir *25*"`
echo $aaa
Выдаётся строка с характеристиками файла (включая имя)

(файла нет)
aaa=`smbclient -N //10.100.1.7/mhcm/ -D dlv_dump/blv1 -c "dir *40*"`
echo $aaa
NT_STATUS_NO_SUCH_FILE listing \dlv_dump\blv1\*40*

МОЖНО ПРОЩЕ

(файл есть)
aaa=`smbclient -N //10.100.1.7/mhcm/ -D dlv_dump/blv1 -c "dir *25*"`
echo $?
Возвращается 0

(файла нет)
aaa=`smbclient -N //10.100.1.7/mhcm/ -D dlv_dump/blv1 -c "dir *40*"`
echo $?
Возвращается 1

================
Намёк на то, как файл, формируемый в stdout можно сразу забросить на smb

echo "test" | smbclient //server/share -c "cd /target/location/;put - <NEW_THIS_FILENAME>"


======================================================
======================================================
======================================================
======================================================
Настройка samba на доступ из локальной сети к заданным подкаталогам
для КОНКРЕТНОГО пользователя (в принципе, надо для sch,
так как www-data будет получать доступ всегда локально).
======================================================
Идея.
Самое правильное - настроить беспарольный доступ (можно всем пользователям),
но только с конкретных IP (серверы и компьютер sch для тестирования).
======================================================
======================================================

Проверенный рецепт настройки файла smb.conf.
Делаем "невидимый" сервис //mhcm-server/blv/
с доступом с сервера 10.100.1.8 и компьютера sch

# mhcm-server blv samba directory
[blv]
   comment = mhcm-server blv samba directory
   path = /var/ips/base
   browseable = no
   read only = no
   guest ok = yes
   create mask = 0666
   directory mask = 0700
   hosts allow = 127.0.0.1, 10.100.1.8, 10.100.1.15                      
 

======================================================
======================================================
Некоторые непроверенные рецепты из сети
======================================================
======================================================

SAMBA авторизация пользователей и раздельный доступ к ресурсам
30 Март 2009 ceval	Написать комментарий К комментариям

Для начала устанавливаем:
$ aptitude install samba smbfs

Samba использует пользователей которые уже есть в системе, (возможно есть и другие пути, об этом в следующей заметке) создаем наших пользователей:
$ useradd -c "Тest" -s /sbin/nologin ole
$ useradd -c "Тest1" -s /sbin/nologin ole1
$ useradd -c "Тest2" -s /sbin/nologin ole2

к команде существуют следующие параметры, мож кому надо:
-g «Названия группы» — группа, к которой он должен принадлежать
-d /home/»каталог» — домашний каталог пользователя
-s /sbin/nologin — устанавливаем ему оболочку /sbin/nologin
-c «Описания» — качестве его полного имени Mr Test,
имя- ole
Посмотрим что у нас получилось:

$ cat /etc/passwd | grep ole
ole:x:5002:5002:Test:/home/ole:/sbin/nologin
ole1:x:5003:5003:Test1:/home/ole1:/sbin/nologin
ole2:x:5004:5004:Test3:/home/ole2:/sbin/nologin

Теперь у нас есть пользователи в системе, надо внести его в базу данных SMB и назначить пароль для доступа к расшаренным ресурсам:
$ smbpasswd -a ole
$ smbpasswd -a ole1
$ smbpasswd -a ole2

Далее правим файл конфигурации Samba (/etc/samba/smb.conf), секция [Global] содержит общие настройки сервера:
$ cp /etc/samba/smb.conf /etc/samba/smb.conf_backup
$ nano /etc/samba/smb.conf

    [global]

    # Название вашей рабочей группы или домена. Именно оно будет высвечивается в «Сетевом окружении».
    workgroup = WORKGROUP
    # server string is the equivalent of the NT Description field
    # Комментарий, появляющийся рядом с именем машины в «Сетевом окружении» Windows.
    server string = %h server (Samba, Ubuntu)
    # Ограничивает обслуживаемые сервером сетевые интерфейсы (eth0) / и по адресам
    interfaces = 127.0.0.0/8 eth0
    # Параметры логирования — log.<имя_машины_клиента>
    log file = /var/log/samba/log.%m
    # Размер лог-файла в Кб
    max log size = 1000
    # еще можно добавить строку «debug level = 3″, она используется при
    # отладке сервера, выводя в журнал более детальную информацию или уровень 5.
    #debug level = 3
    # для более детальной информацией можно поиграться с уровнями (1,2,3, и тд)
    log leval=1

    ####### Authentication #######
    # share — при каждом доступе будет запрашиваться имя пользовательского ресурса.
    # user — для аутентификации будет использоваться имя пользователя и пароль,
    # которые используются для входа в сеть виндовс (Windows). Это значение по умолчанию.
    # server — для проверки пароля будет использоваться сервер NT (AD)
    security = user
    # Поддержка шифрованных паролей
    encrypt passwords = true
    # запрещает становиться мастером домена
    domain master = no
    # отключает WINS
    wins support = no
    # Опции сокета. Если не знаете, что это такое, лучше оставить как есть или почитать ман.
    socket options = TCP_NODELAY SO_SNDBUF=8192 SO_RCVBUF=8192
    # вкл/откл гостевую запись
    guest ok = no
    # запрешает root
    invalid users = root
    # Эти опции избавляют от глюков со шрифтами/кодировками. (так же можно 866 (Dos))
    unix charset = utf8
    dos charset = cp1251
    display charset = cp1251

Пример:
Cоздаем папку для чтения/записи (rw) определенным пользывателем, например для юзвера ole2
$ sudo mkdir /home/DATA_rw
$ sudo chmod 777 /home/DATA_rw

В конфиге smb.conf

    [DATA_rw]
    path = /home/DATA_rw
    create mask = 0664
    directory mask = 0777
    valid users = «ole»,»ole1″,»ole2″
    write list = «ole2″, 

где
- valid users = «» — юзеры которым разрешен доступ к ресурсу (в данном примере дали всем юзверям)
- write list = «» — юзверы, которые могут писать в данную папку (в данном примере — только ole2)
Внимания параметр write, подразумевает под собой еще и read (чтения), т.е для чтения папка будет открыта для всеx указанных в параметре valid users

$ sudo testparm
$ sudo /etc/init.d/samba restart

Если поставить параметр browseable = no:
[DATA_rw]
browseable = no
.. . . . ......

, то папка ни будет отображаться в проводнике, когда заходишь на сервер, но по полному адрессу, если его знаешь ;) , заходишь без проблем (\\host\data_rw)
Для мониторинга сетевых подключений по SAMBA можно использовать команду smbstatus. Для удобства запускать ее в отдельном терминале:
$ watch smbstatus

Эта команда автоматически обновляет информацию о подключениях и выводит ее на экран.


======================================================
======================================================

Быстрая и простая настройка samba

Обновлено: 04.05.2018 Полезные советы 12 комментариев 41,115 Views

Иногда нужно очень быстро на сервере настроить файловую шару и открыть на нее доступ. При этом нет необходимости городить какие-то сложные конфигурации, права доступа или что-то еще. Нужен просто оперативный доступ к информации без лишних вопросов.

Мне, к примеру, недавно подобное понадобилось, чтобы открыть доступ к резервным копиям, которые хранились на сервере. Самому разбираться и искать информацию не хотелось, нужно было быстро дать человеку доступ на чтение, чтобы он сам нашел все, что ему нужно.

Я не буду специально оперировать версиями операционных систем. У самбы конфиги одинаковые почти везде, где мне приходилось с ними работать, тем более в самых простых конфигурациях.

Итак, устанавливаем самбу любым подходящим способом для вашей операционной системы. Конфигурации справедливы для 3-й версии самбы. Дальше решаем, что нам нужно:

    доступ по пользователю и паролю,
    доступ по ip адресу,
    доступ всем подряд без ограничений.

В зависимости от этого настройки будут немного разные.

Для доступа по паролю рисуем такой конфиг:

[global]
security = user
passdb backend = tdbsam
workgroup = MYGROUP
server string = Samba

[share]
path = /mnt/shara
valid users = @users
force group = users
create mask = 0660
directory mask = 0771
writable = yes
browseable = yes

Перезапускаем самбу. Дальше добавляем пользователя в систему примерно так:

# useradd share-user -M -G users -s /sbin/nologin

Импортируем этого пользователя в самбу и задаем пароль:

# smbpasswd -a share-user

И пробуем зайти на шару по адресу:

\\ip-сервера\share

Чтоб организовать доступ в зависимости от ip адреса, делаем такие настройки в smb.conf:

[global]
security = share
workgroup = MYGROUP
server string = Samba
map to guest = bad user

[share]
path = /mnt/files
browsable = yes
writable = yes
guest ok = yes
read only = no
hosts allow = 192.168.0.171

В данном случае полный доступ будет у адреса 192.168.0.171. Чтобы добавить всю подсеть, то указать нужно следующее:

hosts allow = 192.168.0.

Комбинировать можно разные подсети и адреса, разделяя их пробелами. Для того, чтобы отключить доступ каким-то отдельным адресам из разрешенной подсети, можно сделать вот так:

hosts allow = 192.168.0. except 192.168.0.15

Доступ будет разрешен всей подсети 192.168.0.0/24, кроме адреса 192.168.0.15.

Делаем перезапуск самбы и проверяем.

Если у вас установлена samba 4, то эта конфигурация не заработает и вы получите ошибку:

 WARNING: Ignoring invalid value 'share' for parameter 'security'

Чтобы доступ по ip нормально заработал, вам необходимо внести следующие изменения в приведенный выше конфиг:

security = user
map to guest = Bad Password

Остальные параметры оставляете те же. После этого доступ по ip будет работать и на 4-й версии самбы.

Если доступ будет предоставлен всем без ограничений, то простейшая конфигурация самбы будет такой:

[global]
security = user
workgroup = MYGROUP
server string = Samba
guest account = nobody
map to guest = Bad User

[share]
path = /mnt/files
browseable = Yes
guest ok = Yes
writeable = Yes
public = yes

Не забываем сделать права для всех на папку:

# chmod 0777 /mnt/files

Перезапускаем самбу и пробуем зайти. Должно пустить без лишних вопросов.

Вот так буквально за 5 минут можно организовать простейший файловый сервер с помощью samba. А часто сложнее и не надо. Для какой-нибудь файловой помойки подойдет самый последний вариант.


======================================================
======================================================


 Настройка файлового сервера Samba

    Печать	

    Категория: Servers (ru)	
    Опубликовано: 02.04.2012 14:00 
    Автор: Super User 
    Просмотров: 146 

 

Samba— пакет программ, которые позволяют обращаться к сетевым дискам и принтерам на различных операционных системах по протоколу SMB/CIFS. Имеет клиентскую и серверную части. Является свободным программным обеспечением, выпущена под лицензией GPL.

Начиная с третьей версии Samba предоставляет службы файлов и печати для различных клиентов Microsoft Windows и может интегрироваться с операционной системой Windows Server, либо как основной контроллер домена (PDC), либо как член домена. Она также может быть частью домена Active Directory.

Samba работает на большинстве Unix-подобных систем, таких, как Linux, POSIX-совместимых Solaris и Mac OS X Server, на различных вариантах BSD. Samba включена практически во все дистрибутивы Linux.

Установка сервера Samba производится командой

#apt-get install samba

Cервер Samba, который может предоставлять доступ к папкам общего доступа по протоколу SMB. Доступ может предоставляться как парольный, так и безпарольный.

Рассмотрим варианты настройки Samba-сервера.

 

Настройка беспарольного доступа к общим папкам.

 

Откроем файл /etc/samba/smb.conf и заполним его следующим образом:

 [global]

workgroup = WORKGROUP

hosts allow = 192.168.7.0/24

interfaces = eth0

log file = /var/log/samba/log.%m

max log size = 1000

syslog = 0

guest account = nobody

security = share

dos charset = cp866

unix charset = UTF-8

 

[share]

path = /var/local

comment = share

printable = no

writable = yes

guest ok = yes

create mask = 0666

directory mask = 0777

 

Теперь рассмотрим подробно файл конфигурации.

В секции Global описываются общие настройки работы сервера.

workgroup — записываем имя нашей рабочей группы или домена

hosts allow — описываем подсеть, которая будет иметь доступ к нашему серверу

interfaces — перечисляем сетевые интерфейсы, на которых будут приниматься соединения (возможно значение all)

log file = /var/log/samba/log.%m

max log size = 1000

syslog = 0

В этих переменных описываются параметры ведения логов нашего Samba-сервера

 

guest account — задаем соответствие между пользователем Гость и системным пользователем

security = share — используется в случае настройки беспарольного доступа.

 

dos charset — указывает кодировку, в которой Samba будет общаться с клиентами, не поддерживающими Unicode

unix charset — указывает кодировку компьютера на котором работает Samba

 

Далее идут секции, которые описывают соответствующие папки общего доступа. У нас эта секция одна — [share]

path — путь к папку на сервере

comment — сетевое имя папки

writable — разрешена ли запись в папку общего доступа

guest ok — разрешен ли гостевой доступ

create mask — описываются права для вновь созданного файла

directory mask — описываются права для вновь созданного каталога

 

После создания нашего файла конфигурации необходимо перезапустить сервис Samba

#service smbd restart

 

Теперь можно проверить соединение с нашим файловым сервером с любого компьютера в сети.

Для этого в Windows открываем в explorer ссылку \\samba-ip

или в Linux выполняем в консоли команду

smbclient -L samba-ip -N

В последнем случае просто будет выведен список папок общего доступа на нашем сервере

 

Настройка парольного доступа к общим папкам.

Изменим некоторые параметры в секции Global.

А точнее, вместо security = share напишем security = user

Так же следует внести изменения в секцию описания папки общего доступа. Удалим строку guest ok = yes

и добавим строку

write list = user1

Где user1 пользователь, который имеет полный доступ к папке.

Теперь нужно создать пользователя user1 в системе

#adduser user1

 

и добавить системного пользователя в пользователи самбы

#smbpasswd -a user1

 

Обратите внимание! Пароль пользователя в системе и пароль пользователя к ресурсам Samba могут быть разными.

Теперь доступ к нашей папки общего доступа будет с паролем.

Если завести аналогичным образом второго пользователя, то у него доступ к данной папке будет только для чтения.

 

Можно полностью ограничить доступ пользователя user2 к нашей папке общего доступа. Для этого на сервере создается группа, например, share

#addgroup share

 

И в эту группу добавляется пользователь user1

#addgroup user1 share

 

 

Далее на папку в системе выставляются права 770

#chmod 770 /var/local

 

И изменяется владелец папки

#chgrp share /var/local/

 

 

Теперь пользователь user2 вообще не сможет зайти в нашу папку общего доступа.


