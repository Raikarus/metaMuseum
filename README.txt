
Некоторые важные моменты конфигурирования ПО к БД изображений

0. Общие соображения

1. Настройка сетевого доступа к PostgreSQL
2. Прописывание тегов к изображениям при помощи exiftool
3. Теги, которые желательно заполнять из БД МИДД
4. Идея этапности работы с картинками



0. Общие соображения

База данных должна ориентироваться на электронные документы (файлы) разных типов:
- изображения (картинки, фотографии);
- мультимедиа (аудиозаписи, аидеозаписи);
- документы (текстовые и текстовые с картинками, включая презентации);
- образы ISO.

По всей видимости, ВСЕ файлы должны физически сохраняться на дисках по единым принципам:
- замена текстовых имён файлов на обезличенные номера;
- сквозная нумерация в именах файлов без разбивки на типы;
- учёт всех файлов, их номеров и расположения (в том числе на внешних устройствах) через БД;
- привязка к файлам наборов ключевых слов, потенциально заносимых в теги XMP (кроме собственно ключевых слов могут быть полезны некоторые специальные теги - уточнить!!!);
- группирование файлов любых типов по подкаталогам, соответствующим размерам записи на внешние носители (BD-R). Группировка файлов только по размеру - безотносительно их типа и назначения;
- возможность переписать "большие" файлы на внешние носители и работать только с их уменьшенными копиями, которые постоянно хранятся в системе (для тех типов файлов, для которых это имеет смысл);
- "кеширование" в системе "больших" файлов, к которым был доступ (выполненный "вручную") в последнее время;
- (ВАЖНО!) каждый тип файла обрабатывается ОТДЕЛЬНЫМ блоком программы, ориентированным специально на него. Это касается:
	- изготовления и использования preview;
	- извлечения из поступившего файла и записи в отдаваемый файл теговой информации (саму информацию сделать по-возможности унифицированной);
	- видимо, каких-то ещё нюансов.
- ФОРМАТЫ ФАЙЛОВ, предполагаемые к хранению и обработке:
	- картинки: jpeg (только оригиналы, либо копии raw), tiff, png, raw, gif (только для анимированных);
	- мультимедиа аудио: mp3 (за неимением wav/flac), ogg (за неимением wav/flac), wav, flac, ???
	- мультимедиа видео: ???;
	- документы MS Word (старого формата): doc, xls, ppt;
	- документы MS Word OpenXML: docx, xlsx, pptx;
	- документы OpenDocument: odt, ods, odp;
	- документы pdf;
	- документы чисто текстовые (txt) --- ВАЖНО! --- Часто у нас это просто пояснительные тексты, которые должны быть перенесены в БД, после чего эти файлы становятся мусором;
- должна быть предусмотрена возможность построения "связей" ("цепочек", "групп") файлов, фактически представляющих одно и то же в разных форматах, либо редакциях (например, сканы газет в raw и jpeg).

- Должен быть изобретён способ проверки дубляжа, чтобы не хранить и не индексировать в БД и на дисках одинаковые файлы - допустимы файлы с одним и тем же содержанием (например, изображением), если они отличаются обработкой (например, один из них - версия с выполненной допечатной подготовкой).
!!!Особенно это важно при добавлении в систему новых файлов.!!!
- Контроль дубляжа распадается на два типа с разной технологией парирования:
	1) при первоначальном "пакетном" вводе файлов в БД (та же проблема с "пакетным" добавлением новых файлов);
	2) при добавлении одного нового файла.

При "пакетном" добавлении пользователь может подождать, пока система сформирует файл с дубликатами и покажет их ему (полные дубликаты можно удалить автоматически - решение пользователя требуется для "похожих" файлов, например, картинок).

При добавлении каждого единичного нового файла пользователь работает в интерактивном режиме и ему нежелательно долго ждать.





1. Настройка сетевого доступа к PostgreSQL

Необходима, так как БД должна располагаться на одном сервере (mhcm),
а индексировать изображения придётся на нескольких серверах.
Для этого необходимо открыть к БД доступ через TCP/IP 
(который по умолчанию отсутствует).

Был выбран механизм доступа _единственного_ (доверенного) пользователя 
к _единственной_ БД, но без пароля, чтобы не светить пароль в скриптах
и не прописывать его в Postgres.
Пользователь должен быть заведён для СУБД заранее командой createuser
по существующему аккаунту в ОС (без указания пароля для СУБД).
Для него уже должна быть создана БД, доступная ему через локальный psql
(UNIX socket).

Порядок настройки.

Предположим, что настройка выполняется для пользователя sch

1) В файле /etc/postgresql/9.1/postgresql.conf
Найти закомментированную строку 

#listen_addresses = 'localhost'

Раскомментировать её и указать через запятую адреса IP, 
с которых возможен доступ.
По условиям задачи доступ с localhost также лучше сделать (для единообразия).
Я вместо localhost указал 127.0.0.1 (не забыть одинарные кавычки).

2) В файле /etc/postgresql/9.1/pg_hba.conf
В конце файла записать строку

host	pictures	sch	127.0.0.1/32	trust

Здесь:
host - признак настройки хостов
pictures - имя БД
sch -	имя пользователя
trust - признак доступа без пароля

3) Перезапустить PostgreSQL.

ВНИМАНИЕ!
Практика показала, что его надо сначала остановить, а затем снова запустить.
restart не позволяет ввести в действие сделанные в файлах исправления.

4) Проверка, что всё в порядке.
Можно делать даже из-под root ;-)

psql -U sch -h localhost pictures

Должен дать доступ.

psql -U sch -h localhost

Должен выругаться.




2. Прописывание тегов к изображениям при помощи exiftool

Существует несколько разновидностей стандартов тегов.
Однако, похоже, что только стандарт XMP позволяет записывать значения тегов 
по-русски.
Поэтому далее будет рассмотрена процедура добавления тега ключевых слов
в группу тегов XMP.
Более того. Информация XMP будет рассматриваться как основная
и наиболее полная при занесении её в БД. 

Для записи ключевых слов стандарт рекомендует использовать пространство имён
Dublin Core (XMP-dc), в котором используется поле dc:subject.
Поле может содержать произвольное количество слов и/или фраз произвольной длины
в разных системах кодирования (в частности, в UTF-8).

ВНИМАНИЕ!
Любая дозапись в файл какой-либо информации (в том числе тегов XMP)
допускается ТОЛЬКО в его копию, которая отдаётся для дальнейшей
работы (или отдаётся на сторону).
Файлы, укладываемые на хранение, НЕ ДОЛЖНЫ как-либо модифицироваться!!!
В том числе, не допускается дозапись в них каких-либо тегов.
Вся коррекция (добавление) тегов должно выполняться на уровне базы данных,
описывающей хранимые файлы.

Обнаружено, что в ряде случаев при попытке добавить такое поле exiftool 
ругается на дубликаты значений других полей.
Убрать их просто так не получается.
Поэтому обычный порядок добавления тегов XMP в произвольный файл изображения
должен выглядеть следующим образом.

1) Извлечь ВСЕ данные в файл формата xmp

exiftool -TagsFromFile file.jpg file.xmp

Любопытно, что в извлечённом массиве никакого дубляжа уже нет.

2) Удалить всю информацию XMP из исходного файла

exiftool -XMP= file.jpg

3) Вернуть уже корректную информацию XMP в файл

exiftool -TagsFromFile file.xmp file.jpg

Примечание.
Для меня пока осталось непонятным, извлекается ли в п. 1 в формат XMP
информация из тегов всех типов, или только типа XMP.
Соответственно, неизвестно, нужны ли команды типа 3а (следующие).

3а) Переписать в формат XMP соответствующую информацию из тегов других типов

- для IPTC (при этой команде попутно сами теги IPTC будут удалены)

exiftool -@ iptc2xmp.args -iptc:all= file.jpg

Файл iptc2xmp.args можно посмотреть в подкаталоге документации
/usr/share/doc/libimage-exiftool-perl/...
Там имеются файлы:
exif2xmp.args
gps2xmp.args
iptc2xmp.args
pdf2xmp.args
Можно написать свои файлы для других типов файлов, кроме изображений и pdf.

Примечание. (!!!)
Похоже, что в этих файлах неверно записаны имена тегов XMP.
По стандарту все они начинаются со строчной буквы, 
в то время как в этих файлах они записаны с прописной.

4) Добавить нужные теги. Например, значения тега dc:subject

exiftool -XMP-dc:subject+="кл. слово 1" -XMP-dc:subject+="кл. слово 2" file.jpg

Команду можно повторить с разными ключевыми словами несколько раз.

5) Теперь можно просмотреть информацию XMP-dc

exiftool -XMP-dc:ALL file.jpg

Любопытно, что при простом запросе -XMP эта информация не отдаётся
без ключа -b (binary),
но в файле xmp по команде из п. 1 присутствует.

В норме информация XMP сериализуется в виде дерева XML.




3. Теги, которые желательно заполнять из БД МИДД

3.1. Для изображений
(список начерно - потом откорректировать)

XMP-dc:subject - ключевые слова и фразы (массив строк) или из IPTC Keywords
XMP-dc:creator - заполняется из EXIF Artist или из IPTC By-line
	По стандарту - список создателей (упорядоченный массив) 
	в порядке уменьшения "приоритета" (если таковой установлен)
XMP-dc:rights - заполняется из EXIF Copyright или из IPTC CopyrightNotice
XMP-dc:title - заполняется из IPTC ObjectName
	По стандарту - имя, под которым ресурс формально известен
XMP-dc:date - (???) точка или период времени (упорядоченный массив), связанные с периодом в жизненном цикле ресурса (???)
XMP-dc:identifier - Идентификатор ресурса. Текст. (Видимо, очень удобное место для ссылки на выдаваемый файл в БД, чтобы при "возврате" было удобно сопоставлять) 

- Нам нужен UTF-8
XMP-dc:description - заполняется из EXIF ImageDescription (НЕ UTF-8) или из IPTC Caption-Abstract
	По стандарту - список текстовых описаний содержимого ресурса
	на различных языках

XMP-exif:UserComment - одна строка - пользовательский комментарий (возможен UTF-8) (см. в EXIF:)

XMP:Label - слово или короткая фраза, которая идентифицирует ресурс как члена определённой пользователем коллекции
(=== Видимо, так и использовать, как ссылку (текстовую) на первоначальную "коллекцию" - то есть, например, "Из собрания такого-то человека". ===)

- Лучше использовать dc:creator (это список)
XMP-tiff:Artist

?
XMP-tiff:Copyright

XMP:GPSLatitude
XMP:GPSLongitude
XMP:GPSDateTime

?
XMP-photoshop:AuthorPosition - из IPTC By-lineTitle

-
XMP-photoshop:Category - из IPTC Category (Ограничен 3 7-битными символами ASCII) (???)

+ Вводить напрямую в XMP
XMP-photoshop:City - из IPTC City
XMP-photoshop:Country - из IPTC Country-PrimaryLocationName
XMP-photoshop:State - из IPTC Province-State

- Будет использован UserComment
XMP-photoshop:Headline - из IPTC Headline

EXIF:
- Лучше использовать dc:creator (это список)
Artist - рекомендуемый формат: "Camera owner, John Smith; Photographer, Michael Brown; Image creator, Ken James"
exiftool отнёс этот тег к семейству tiff:

?
Copyright - копирайт автора и редактора (в т. ч. организации) - запись в хитром формате (см. стандарт)

DateTime - дата и время создания изображения
exiftool отнёс этот тег к семейству tiff:
Обычно присутствует сразу в снимке

+ Полезен
UserComment - для записей в UTF-8. Допускается запись _ключевых слов_ или _комментариев_, кроме записанных в ImageDescription и без ограничений на символы, присущий ImageDescription. Можно записать ЛЮБОЕ количество символов. Поле начинается с 8-байтового маркера набора символов (приводится в стандарте).


3.2. Для pdf
(список начерно - потом откорректировать)

XMP-dc:Title - из PDF Title
XMP-dc:Creator - из PDF Author
XMP-dc:Description - из PDF Subject

XMP-pdf:Keywords - из PDF Keywords
XMP-pdf:Author - Автор(ы) - используется для записи -Author в .tiff

============

Команда выборки тегов выглядит примерно так:
exiftool -ТЕГ -X файл.jpg

В результате выдаётся фрагмент XML с общей частью:
<?xml version='1.0' encoding='UTF-8'?>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'>

<rdf:Description rdf:about='Ereshko_kw.JPG'
  xmlns:et='http://ns.exiftool.ca/1.0/' et:toolkit='Image::ExifTool 8.60'
  xmlns:... Здесь описание пространства имён ...>
 ... Здесь структура с запрошенным тегом ...
</rdf:Description>
</rdf:RDF>

Если запрошенный тег в файле отсутствует, то структуры с запрошенным тегом
просто не будет (структура с пустым тегом сформирована не будет).


Теги
====

Artist
------
(IFD"ноль")
 xmlns:IFD0='http://ns.exiftool.ca/EXIF/IFD0/1.0/'

 <IFD0:Artist>Фотограф</IFD0:Artist>

Artist - рекомендуемый формат: "Camera owner, John Smith; Photographer, Michael Brown; Image creator, Ken James"
- Лучше использовать dc:creator (это список)

UserComment
-----------
 xmlns:ExifIFD='http://ns.exiftool.ca/EXIF/ExifIFD/1.0/'

 <ExifIFD:UserComment>Комментарий к снимку</ExifIFD:UserComment>


DateTime
--------
 xmlns:XMP-tiff='http://ns.exiftool.ca/XMP/XMP-tiff/1.0/'

 <XMP-tiff:DateTime>2011:10:01 14:29:11</XMP-tiff:DateTime>

City (Country, State)
----
Перезаписывает IPTC:City и XMP-photoshop:City
Допускает только латиницу (из-за IPTC)
При отсутствии IPTC:City перезаписывает/создаёт только XMP-photoshop:City
и допускает кириллицу (UTF-8)


IPTC:
-=-=-
 xmlns:IPTC='http://ns.exiftool.ca/IPTC/IPTC/1.0/'
Только латиница!

IPTC:City (IPTC:Country, IPTC:State)
---------
 <IPTC:City>Moscow</IPTC:City>


XMP:Label
---------
 xmlns:XMP-xmp='http://ns.exiftool.ca/XMP/XMP-xmp/1.0/'

 <XMP-xmp:Label>Из собрания сочинений</XMP-xmp:Label>


XMP-xmp:identifier
------------------
 xmlns:XMP-xmp='http://ns.exiftool.ca/XMP/XMP-xmp/1.0/'

 <XMP-xmp:Identifier>
  <rdf:Bag>
   <rdf:li>222</rdf:li>
   <rdf:li>333</rdf:li>
  </rdf:Bag>
 </XMP-xmp:Identifier>


XMP-photoshop:
-=-=-=-=-=-=-=
 xmlns:XMP-photoshop='http://ns.exiftool.ca/XMP/XMP-photoshop/1.0/'

XMP-photoshop:City
------------------
 <XMP-photoshop:City>Москва</XMP-photoshop:City>

XMP-photoshop:Country
------------------
Стандартом понимается как "Country/primary location",
то есть, видимо, должно трактоваться как "Страна/государство"
 <XMP-photoshop:Country>Россия</XMP-photoshop:Country>

XMP-photoshop:State
------------------
Стандартом понимается как "Province/state",
то есть, видимо, должно трактоваться как "Область/штат"
 <XMP-photoshop:State>Московская область</XMP-photoshop:State>



XMP-dc:
-=-=-=-
 xmlns:XMP-dc='http://ns.exiftool.ca/XMP/XMP-dc/1.0/'

XMP-dc:title
------------

 <XMP-dc:Title>Фото Ерешко</XMP-dc:Title>


XMP-dc:rights
-------------

 <XMP-dc:Rights>Из фондов МИДД</XMP-dc:Rights>


XMP-dc:subject
--------------

 <XMP-dc:Subject>
  <rdf:Bag>
   <rdf:li>кл. слово 1</rdf:li>
   <rdf:li>кл. слово 2</rdf:li>
  </rdf:Bag>
 </XMP-dc:Subject>


XMP-dc:creator
--------------

 <XMP-dc:Creator>
  <rdf:Bag>
   <rdf:li>Фотограф</rdf:li>
   <rdf:li>Ретушь</rdf:li>
  </rdf:Bag>
 </XMP-dc:Creator>

По другим данным вместо <rdf:Bag> должно/может быть <rdf:Seq>


XMP-dc:identifier
-----------------

 <XMP-dc:Identifier>1111</XMP-dc:Identifier>


================================
Дополнительно полезными тегами (просто для обработки и заполнения БД) могут быть

XMP-tiff:ImageHeight
XMP-tiff:ImageWidth

PNG:ImageHeight
PNG:ImageWidth
PNG:ModifyDate
PNG:Artist (на тег -Artist для .png)
PNG:Author (на тег -Author для .png)
  (xmlns:PNG='http://ns.exiftool.ca/PNG/PNG/1.0/)
XMP-pdf:Author (на тег -Author для .tiff)
  (xmlns:XMP-pdf='http://ns.exiftool.ca/XMP/XMP-pdf/1.0/)

IFD0:ModifyDate
IFD0:ImageHeight
IFD0:ImageWidth

File:ImageWidth
File:ImageHeight
  (xmlns:File='http://ns.exiftool.ca/File/1.0/)

Может возникнуть предупреждение:
ExifTool:Warning
	В этом случае внятных тегов можно не ожидать,
	и надо как-то через другие команды взять минимум информации о файле
	(размер (байт), разрешение HxW, дату/время)

================================

Примерная команда выборки значения конкретного поля тега

exiftool -XMP-dc:rights -X Ereshko_kw.JPG |xmlstarlet sel `cat ns1.xmp` -t -v "//XMP-dc:Rights"

где файл ns1.xmp должен содержать описания пространств имён (в одну строку):

-N XMP-dc=http://ns.exiftool.ca/XMP/XMP-dc/1.0/ -N RDF=http://www.w3.org/1999/02/22-rdf-syntax-ns#

Можно выбрать элементы списка:
exiftool -ALL -X Ereshko_kw.JPG |xmlstarlet sel `cat ns1.xmp` -t -v "//XMP-dc:Subject//rdf:li"

Причём выбранные элементы (очищенные от обрамляющих тегов) 
будут выданы построчно,
то есть их можно легко обрабатывать как простую последовательность строк.

===================================

[Только для картинок!!!]
Нас интересуют позиции (в порядке уменьшения приоритета):

- название картинки (заголовок, титул)
	<XMP-dc:Title>
	<XMP-photoshop:AuthorPosition>
	<IPTC:ObjectName> (англ.)
	<IPTC:By-lineTitle> (англ.)

- описание картинки (для XMP-.. возможно многострочное)
	<ExifIFD:UserComment>
	(??)<XMP-exif:UserComment> (более стандартно, чем XMP-dc:Description)
	<XMP-dc:Description>
	<EXIF:ImageDescription>
	<XMP-photoshop:Headline>
	<IPTC:Caption-Abstract> (англ.)
	<IPTC:Headline> (англ.)

- географическая привязка - город (населённый пункт)
	<XMP-photoshop:City>
	<IPTC:City> (англ.)

- географическая привязка - страна
	<XMP-photoshop:Country>
	<IPTC:Country-PrimaryLocationName> (англ.)

- географическая привязка - регион (штат)
	<XMP-photoshop:State>
	<IPTC:Province-State> (англ.)


- привязка к коллекции
	<XMP-xmp:Label>

- ключевые слова (собственно маркировочные теги)
	<XMP-dc:Subject><rdf:Bag><rdf:li>
	<IPTC:Keywords> (необходимо сопоставление англ.-рус.)

- Автор(ы) (если есть)
	<XMP-dc:Creator><rdf:Bag><rdf:li>
	(или <XMP-dc:Creator><rdf:Seq><rdf:li> )
	<XMP-tiff:Artist>
	<IFD0:Artist>
	<PNG:Artist>
	<XMP-pdf:Author>
	<PNG:Author>

- ширина в точках
	<XMP-tiff:ImageWidth>
	<IFD0:ImageWidth>
	<PNG:ImageWidth>

- высота в точках
	<XMP-tiff:ImageHeight>
	<IFD0:ImageHeight>
	<PNG:ImageHeight>

- дата
	<XMP-tiff:DateTime>
	<IFD0:ModifyDate>
	<PNG:ModifyDate>

- привязка (к исходной картинке после переработки)
	<XMP-xmp:Identifier><rdf:Bag><rdf:li>
	<XMP-dc:Identifier>

- авторские права (если есть)
	<XMP-dc:Rights>
	<XMP-tiff:Copyright>
	<EXIF:Copyright>
	<IPTC:CopyrightNotice>

Каждая первая из перечисленных позиций считается главной
и заносится в EXIF-XMP при отдаче картинки "на сторону".
Остальные позиции только читаются и только в том случае, 
если нет более высокой по приоритету.

При разборе может возникать предупреждение:
	<ExifTool:Warning>
что означает невозможность нормального разбора заголовка тегов
и необходимость фактически строить заголовок с нуля.



При отдаче "на сторону" полезно записать 
(и, видимо, игнорировать то, что там было записано ранее):
	<XMP-dc:Rights>Из фондов МИДД</XMP-dc:Rights>


Также интересны:
- привязки к меньшему размеру, к предпросмотру, к "иконке"
- привязки tiff/jpg raw/jpg
но это всё позже



4. Идея этапности работы с картинками

Каждый этап, вероятно, удобнее делать отдельным скриптом,
чтобы не сильно их усложнять.

Картинки могут добавляться на уже обработанные диски.
Поэтому одну и ту же процедуру, возможно, придётся повторить несколько раз.

0) Обеспечить в корне индексируемого тома наличие файла MD5
с контрольными суммами ВСЕХ файлов тома.
Выполнить проверку соответствия файлов и контрольных сумм!!!
(Чтобы потом ничего не пришлось переделывать!)
Выполнить эту работу стандартными процедурами, прописанными для разделов dlv.

0а) Выполнить проверку на файлы нулевой длины и разобраться с ними
(удалить, либо заменить на корректные).
Полезна также проверка на структурную целостность файлов изображений.
Увы, это очень долго и сложно.
Но при наличии возможности это КРАЙНЕ желательно выполнить!

1) (Автоматически) Первичное индексирование
- каждой (новой) картинке присваивается уникальный номер, 
который в виде жёсткой ссылки размещается в номерном подкаталоге
на текущем томе.
На одном томе предусматривается существование нескольких номерных
подкаталогов, соответствующих по ёмкости внешнему оптическому носителю
(например, BD-R).
(В БД должен быть предусмотрен механизм "закрытия" того или другого
номерного подкаталога, чтобы запретить его пополнение, когда он уже записан 
на диск BD-R.);
- первичное заполнение таблиц БД с приписыванием файлу начальных 
ключевых слов (из его тегов и по его имени и подкаталогу размещения).

После этого этапа сделать дамп (срез) БД pictures.

2) (Автоматически) Выборка и занесение в БД существующих сумм MD5.

После этого этапа сделать дамп (срез) БД pictures.

3) (Автоматически) Формирование Preview и размещение их на отдельном, 
специально выделенном разделе (разделах), постоянно присутствующем на сервере.
(В отличие от подкаталогов с полными файлами, которые все
просто считаются временно закешированными).

3а) (Автоматически) Формирование Fingerprint каждого файла изображения
и размещение их на отдельном, специально выделенном разделе (разделах), 
постоянно присутствующем на сервере.
Использовать алгоритм (и саму программу) findimagedupes.

ВАЖНО!
Необходимо иметь возможность ПОЛНОЙ перегенерации всей БД fingerprint,
так как после обновления GraphicsMagick БД fingerprint становится некорректной.

4) (Вручную, Web) Полуавтоматический поиск и ручное "слияние" дубликатов,
то есть ПО УКАЗАНИЮ ОПЕРАТОРА объединение описательной информации
двух файлов с последующим удалением одного из них.
(В БД должен быть предусмотрен механизм отметки файлов,
которые находятся в уже "закрытых" номерных подкаталогах,
чтобы исключить возможность их удаления вместо ещё не "закрытых",
поскольку удаление таких файлов, вообще говоря, уже невозможно).

Интерфейс Web должен предоставлять пользователю информацию:

- о полностью совпадающих файлах (их автоматическое удаление 
после слияния теговой информации нежелательно,
поскольку какие-то из них могут быть размещены в уже "закрытых" подкаталогах);

- о предположительно совпадающих файлах.

4а) (Вручную, Web) Полуавтоматическое подтверждение пар 
tif/jpg, raw/jpg, png/jpg.


5) (Вручную, Web) Тегирование и описание каждой картинки.

6) (Автоматически) Подготовка картинки к выдаче "на сторону",
включая формирование и прописывание в неё группы тегов EXIF/XMP.

